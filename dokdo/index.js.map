{"version":3,"sources":["../../node_modules/tsup/assets/esm_shims.js","../../src/index.ts","../../src/utils/index.ts","../../src/utils/ProcessManager.ts","../../src/utils/codeBlock.ts","../../src/utils/hljs.ts","../../src/utils/system.ts","../../src/utils/DateFormatting.ts","../../src/utils/count.ts","../../src/utils/type.ts","../../src/utils/inspect.ts","../../src/utils/table.ts","../../src/utils/isinstance.ts","../../src/utils/isGenerator.ts","../../src/utils/regexpEscape.ts","../../src/utils/join.ts","../../src/commands/index.ts","../../src/commands/main.ts","../../package.json","../../src/commands/exec.ts","../../src/commands/js.ts","../../src/commands/shard.ts","../../src/commands/jsi.ts","../../src/commands/curl.ts","../../src/commands/cat.ts"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","import {\n  Snowflake,\n  Client,\n  Message,\n  User,\n  ChatInputCommandInteraction\n} from 'discord.js'\nimport fetch from 'node-fetch'\n\nimport * as Utils from './utils'\nimport * as Commands from './commands'\nimport { cat, curl, exec, js, jsi, main, shard } from './commands'\n\nexport interface DokdoOptions {\n  aliases?: string[];\n  owners?: Snowflake[];\n  prefix?: string;\n  secrets?: string[];\n  globalVariable?: Record<string, any>;\n  disableAttachmentExecution?: boolean;\n  noPerm?(context: Message | ChatInputCommandInteraction): Promise<unknown>;\n  isOwner?: (user: User) => boolean | Promise<boolean>;\n}\nexport interface MessageData {\n  raw: string;\n  command: string;\n  type: string;\n  args?: string;\n}\ndeclare module 'discord.js' {\n  interface Message {\n    data: MessageData;\n  }\n}\n\nexport type Context = ChatInputCommandInteraction | Message;\n\nclass Dokdo {\n  public owners: Snowflake[];\n  public process: never[];\n\n  /**\n   * Main Client of Dokdo\n   * @param client Discord Client\n   * @param options Dokdo Options\n   */\n  public constructor (public client: Client, public options: DokdoOptions) {\n    if (!(client instanceof Client)) { throw new TypeError('Invalid `client`. `client` parameter is required.') }\n\n    // if (!this.options || typeof options !== 'object') throw new Error('Invliad `options`. `options` parameter is required.')\n\n    if (options.noPerm && typeof options.noPerm !== 'function') { throw new Error('`noPerm` parameter must be Function.') }\n\n    if (options.globalVariable) {\n      if (typeof options.globalVariable !== 'object') { throw new Error('`globalVariable` parameter must be Object.') } else {\n        Object.keys(options.globalVariable).forEach((el) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          if (options.globalVariable) global[el] = options.globalVariable[el]\n        })\n      }\n    }\n\n    if (options.isOwner && !options.owners) options.owners = []\n    this.owners = options.owners || []\n\n    if (!this.options.secrets || !Array.isArray(this.options.secrets)) { this.options.secrets = [] }\n\n    if (!this.options.aliases) this.options.aliases = ['dokdo', 'dok']\n\n    this.process = []\n\n    client.once('ready', (client) => {\n      if (!this.owners.length) {\n        console.warn('[ Dokdo ] Owners not given. Fetching from Application.')\n        client.application.fetch().then((data) => {\n          if (!data.owner) { return console.warn('[ Dokdo ] Falied to owner data.') }\n          if (data.owner instanceof User) { return this.owners.push(data.owner.id) }\n\n          this.owners = data.owner.members?.map((el) => el.id)\n\n          console.info(\n            `[ Dokdo ] Fetched ${this.owners.length} owner(s): ${\n              this.owners.length > 3\n                ? this.owners.slice(0, 3).join(', ') +\n                  ` and ${this.owners.length - 3} more owners`\n                : this.owners.join(', ')\n            }`\n          )\n        })\n      }\n    })\n  }\n\n  public async run (ctx: Context): Promise<void> {\n    if (ctx instanceof Message) {\n      if (!this.options.prefix) return\n      if (!ctx.content.startsWith(this.options.prefix)) return\n\n      const parsed = ctx.content.replace(this.options.prefix, '').split(' ')\n      const codeParsed = Utils.codeBlock.parse(parsed.slice(2).join(' '))\n\n      ctx.data = {\n        raw: ctx.content,\n        command: parsed[0]!,\n        type: parsed[1]!,\n        args: codeParsed ? codeParsed[2] : parsed.slice(2).join(' ')\n      }\n\n      if (\n        !ctx.data.args &&\n        ctx.attachments.size > 0 &&\n        !this.options.disableAttachmentExecution\n      ) {\n        const file = ctx.attachments.first()\n        if (!file) return\n\n        const buffer = await (await fetch(file.url)).buffer()\n        const type = { ext: file.name?.split('.').pop(), fileName: file.name }\n\n        if (\n          ['txt', 'js', 'ts', 'sh', 'bash', 'zsh', 'ps'].includes(type.ext!)\n        ) {\n          ctx.data.args = buffer.toString()\n          if (!ctx.data.type && type.ext !== 'txt') ctx.data.type = type.ext!\n        }\n      }\n      if (\n        this.options.aliases &&\n        !this.options.aliases.includes(ctx.data.command)\n      ) { return }\n      if (!this.owners.includes(ctx.author.id)) {\n        let isOwner = false\n\n        if (this.options.isOwner) {\n          isOwner = await this.options.isOwner(ctx.author)\n        }\n\n        if (!isOwner) {\n          if (this.options.noPerm) this.options.noPerm(ctx)\n          return\n        }\n      }\n\n      if (!ctx.data.type) return main(ctx, this)\n      switch (ctx.data.type) {\n        case 'sh':\n        case 'bash':\n        case 'ps':\n        case 'powershell':\n        case 'shell':\n        case 'zsh':\n        case 'exec':\n          exec(ctx, this)\n          break\n        case 'js':\n        case 'javascript':\n          js(ctx, this)\n          break\n        case 'shard':\n          shard(ctx, this)\n          break\n        case 'jsi':\n          jsi(ctx, this)\n          break\n        case 'curl':\n          curl(ctx, this)\n          break\n        case 'cat':\n          cat(ctx, this)\n          break\n        default:\n          ctx.reply(\n            `Available Options: ${Object.keys(Commands)\n              .filter((t) => t !== 'main')\n              .map((t) => `\\`${t}\\``)\n              .join(', ')}`\n          )\n      }\n    }\n  }\n\n  public _addOwner (id: Snowflake): Snowflake[] {\n    if (!this.owners.includes(id)) this.owners.push(id)\n    return this.owners\n  }\n\n  public _removeOwner (id: Snowflake): Snowflake[] {\n    if (this.owners.includes(id)) this.owners.splice(this.owners.indexOf(id), 1)\n    return this.owners\n  }\n}\n\nexport { Dokdo as Client, Utils, Commands }\n","export * from './ProcessManager'\nexport * from './codeBlock'\nexport * from './hljs'\nexport * from './system'\nexport * from './DateFormatting'\n\nexport * from './count'\nexport * from './inspect'\nexport * from './table'\nexport * from './type'\nexport * from './isinstance'\nexport * from './isGenerator'\nexport * from './regexpEscape'\nexport * from './join'\n","import Discord, {\n  ButtonBuilder,\n  ButtonInteraction,\n  ComponentType,\n  InteractionCollector,\n  Message,\n  TextBasedChannel,\n  User\n} from 'discord.js'\nimport { codeBlock, regexpEscape } from '.'\nimport type { Client, Context } from '../'\n\nexport interface ProcessOptions {\n  /**\n   * @default 1900\n   */\n  limit?: number\n  /**\n   * @default false\n   */\n  noCode?: boolean\n  secrets?: string[]\n  lang?: string\n}\n\nexport interface ActionOptions {\n  // eslint-disable-next-line no-use-before-define\n  manager: ProcessManager\n  [x: string]: any\n}\n\nexport interface Action {\n  button: ButtonBuilder\n  requirePage: boolean\n\n  action(options: ActionOptions): Promise<any> | any\n}\n\n/**\n * Process Manager of every Process\n */\nexport class ProcessManager {\n  public target: TextBasedChannel\n  public messageContent: string\n  public limit: number\n  public splitted: string[]\n  public page: number\n  public author: User\n  public actions: Action[]\n  public wait: number\n  public message?: Message\n  public argument: never[]\n  public args: any\n  public messageComponentCollector:\n    | InteractionCollector<ButtonInteraction>\n    | undefined\n\n  constructor (\n    message: Context,\n    public content: string,\n    public dokdo: Client,\n    public options: ProcessOptions = {}\n  ) {\n    this.target = message.channel!\n    this.dokdo = dokdo\n    this.content = content || '​'\n    this.messageContent = ''\n    this.options = options\n    this.limit = options.limit || 1900\n    this.splitted = this.splitContent() || [' ']\n    this.page = 1\n    this.author = message instanceof Message ? message.author : message.user\n    this.actions = []\n    this.wait = 1\n    this.message = undefined\n    this.argument = []\n    if (typeof this.content !== 'string') {\n      throw new Error('Please pass valid content')\n    }\n  }\n\n  async init (): Promise<void> {\n    this.messageContent = this.genText()\n    this.message = await this.target.send(\n      this.filterSecret(this.messageContent)\n    )\n  }\n\n  async addAction (actions: Action[], args?: Record<string, unknown>): Promise<void> {\n    if (!this.message) return\n\n    this.actions.push(...actions)\n    this.args = args || {}\n\n    this.args.manager = this\n\n    this.createMessageComponentMessage()\n    this.messageComponentCollector =\n      this.message.createMessageComponentCollector({\n        componentType: ComponentType.Button,\n        filter: (interaction) =>\n          Boolean(\n            this.actions.find(\n              // @ts-ignore\n              (e) => e.button.data.custom_id === interaction.customId\n            ) && interaction.user.id === this.author.id\n          ),\n        time: 300000,\n        dispose: true\n      })\n\n    this.messageComponentCollector.on('collect', (component) => {\n      const event = this.actions.find(\n        // @ts-ignore\n        (e) => e.button.data.custom_id === component.customId\n      )\n      if (!event) return\n      component.deferUpdate()\n      event.action(this.args)\n    })\n\n    this.messageComponentCollector.on('end', () => {\n      this.message?.edit({ components: [] })\n    })\n  }\n\n  async createMessageComponentMessage (): Promise<void> {\n    if (this.options.noCode && this.splitted.length < 2) return\n    const buttons = this.actions\n      .filter((el) => !(el.requirePage && this.splitted.length <= 1))\n      .map((el) => el.button)\n    if (buttons.length <= 0) return\n    const actionRow = new Discord.ActionRowBuilder<ButtonBuilder>({\n      components: buttons\n    })\n    this.message?.edit({ components: [actionRow] })\n  }\n\n  filterSecret (string: string): string {\n    string = string.replace(\n      new RegExp(this.dokdo.client.token!, 'gi'),\n      '[accesstoken was hidden]'\n    )\n\n    if (this.dokdo.options.secrets) {\n      for (const el of this.dokdo.options.secrets) {\n        string = string.replace(new RegExp(regexpEscape(el), 'gi'), '[secret]')\n      }\n    }\n\n    return string\n  }\n\n  updatePage (num: number): void {\n    if (!this.message) return\n    if (this.splitted.length < num || num < 1) throw new Error('Invalid page.')\n    this.page = num\n\n    this.genText()\n    this.update()\n  }\n\n  nextPage (): void {\n    if (this.page >= this.splitted.length) return\n\n    this.updatePage(this.page + 1)\n  }\n\n  previousPage (): void {\n    if (this.page <= 1) return\n\n    this.updatePage(this.page - 1)\n  }\n\n  update (): void {\n    if (!this.message) return\n    this.splitted = this.splitContent()\n    if (this.wait === 0) this.messageContent = this.genText()\n    else if (this.wait % 2 === 0) {\n      this.wait = 0\n      setTimeout(() => {\n        this.messageContent = this.genText()\n        this.edit()\n        this.wait++\n      }, 1000)\n    } else {\n      this.messageContent = this.genText()\n      this.edit()\n      this.wait++\n    }\n  }\n\n  edit (): void {\n    if (this.splitted.length > 1) this.createMessageComponentMessage()\n    this.message?.edit(this.filterSecret(this.messageContent))\n  }\n\n  add (content: string): void {\n    if (!this.message) return\n    this.content += content\n\n    this.update()\n  }\n\n  destroy (): void {\n    this.message?.edit({ components: [] })\n    this.messageComponentCollector?.stop()\n  }\n\n  genText (): string {\n    return this.options.noCode && this.splitted.length < 2\n      ? `${this.splitted[this.page - 1]}`\n      : `${codeBlock.construct(\n          this.splitted[this.page - 1]!,\n          this.options.lang\n        )}\\n\\nPage ${this.page}/${this.splitted.length}`\n  }\n\n  splitContent (): string[] {\n    const char = [new RegExp(`.{1,${this.limit}}`, 'g'), '\\n']\n    const text = Discord.verifyString(this.content)\n    if (text.length <= this.limit) return [text]\n    let splitText = [text]\n\n    while (\n      char.length > 0 &&\n      splitText.some((elem) => elem.length > this.limit)\n    ) {\n      const currentChar = char.shift()\n      if (currentChar instanceof RegExp) {\n        splitText = splitText\n          .flatMap((chunk) => chunk.match(currentChar))\n          .filter((value) => value !== null) as string[]\n      } else {\n        splitText = splitText.flatMap((chunk) => chunk.split(currentChar!))\n      }\n    }\n    if (splitText.some((elem) => elem.length > this.limit)) {\n      throw new RangeError('SPLIT_MAX_LEN')\n    }\n    const messages = []\n    let msg = ''\n    for (const chunk of splitText) {\n      if (msg && (msg + char + chunk).length > this.limit) {\n        messages.push(msg)\n        msg = ''\n      }\n      msg += (msg && msg !== '' ? char : '') + chunk\n    }\n    return messages.concat(msg).filter((m) => m)\n  }\n}\n","export class codeBlock {\n  static construct (content: string, lang?: string): string {\n    return `\\`\\`\\`${content ? lang || '' : ''}\n${content.replaceAll('```', '\\\\`\\\\`\\\\`')}\n\\`\\`\\``\n  }\n\n  static parse (content: string): string[] | null {\n    const result = content.match(/^```(.*?)\\n(.*?)```$/ms)\n    return result ? result.slice(0, 3).map((el) => el.trim()) : null\n  }\n}\n","export class HLJS {\n  static languages = [\n    'as',\n    '1c',\n    'abnf',\n    'accesslog',\n    'actionscript',\n    'ada',\n    'ado',\n    'adoc',\n    'apache',\n    'apacheconf',\n    'applescript',\n    'arduino',\n    'arm',\n    'armasm',\n    'asciidoc',\n    'aspectj',\n    'atom',\n    'autohotkey',\n    'autoit',\n    'avrasm',\n    'awk',\n    'axapta',\n    'bash',\n    'basic',\n    'bat',\n    'bf',\n    'bind',\n    'bnf',\n    'brainfuck',\n    'c',\n    'c++',\n    'cal',\n    'capnp',\n    'capnproto',\n    'cc',\n    'ceylon',\n    'clean',\n    'clj',\n    'clojure-repl',\n    'clojure',\n    'cls',\n    'cmake.in',\n    'cmake',\n    'cmd',\n    'coffee',\n    'coffeescript',\n    'console',\n    'coq',\n    'cos',\n    'cpp',\n    'cr',\n    'craftcms',\n    'crm',\n    'crmsh',\n    'crystal',\n    'cs',\n    'csharp',\n    'cson',\n    'csp',\n    'css',\n    'd',\n    'dart',\n    'dcl',\n    'delphi',\n    'dfm',\n    'diff',\n    'django',\n    'dns',\n    'do',\n    'docker',\n    'dockerfile',\n    'dos',\n    'dpr',\n    'dsconfig',\n    'dst',\n    'dts',\n    'dust',\n    'ebnf',\n    'elixir',\n    'elm',\n    'erb',\n    'erl',\n    'erlang-repl',\n    'erlang',\n    'excel',\n    'f90',\n    'f95',\n    'feature',\n    'fix',\n    'flix',\n    'fortran',\n    'freepascal',\n    'fs',\n    'fsharp',\n    'gams',\n    'gauss',\n    'gcode',\n    'gemspec',\n    'gherkin',\n    'glsl',\n    'gms',\n    'go',\n    'golang',\n    'golo',\n    'gradle',\n    'graph',\n    'groovy',\n    'gss',\n    'gyp',\n    'h',\n    'h++',\n    'haml',\n    'handlebars',\n    'haskell',\n    'haxe',\n    'hbs',\n    'hpp',\n    'hs',\n    'hsp',\n    'html.handlebars',\n    'html.hbs',\n    'html',\n    'htmlbars',\n    'http',\n    'https',\n    'hx',\n    'hy',\n    'hylang',\n    'i7',\n    'iced',\n    'icl',\n    'inform7',\n    'ini',\n    'instances',\n    'irb',\n    'irpf90',\n    'java',\n    'javascript',\n    'jboss-cli',\n    'jinja',\n    'js',\n    'json',\n    'jsp',\n    'jsx',\n    'julia',\n    'k',\n    'kdb',\n    'kotlin',\n    'lasso',\n    'lassoscript',\n    'lazarus',\n    'ldif',\n    'leaf',\n    'less',\n    'lfm',\n    'lisp',\n    'livecodeserver',\n    'livescript',\n    'llvm',\n    'lpr',\n    'ls',\n    'lsl',\n    'lua',\n    'm',\n    'mak',\n    'makefile',\n    'markdown',\n    'mathematica',\n    'matlab',\n    'maxima',\n    'md',\n    'mel',\n    'mercury',\n    'mips',\n    'mipsasm',\n    'mizar',\n    'mk',\n    'mkd',\n    'mkdown',\n    'ml',\n    'mm',\n    'mma',\n    'mojolicious',\n    'monkey',\n    'moo',\n    'moon',\n    'moonscript',\n    'n1ql',\n    'nc',\n    'nginx',\n    'nginxconf',\n    'nim',\n    'nimrod',\n    'nix',\n    'nixos',\n    'nsis',\n    'obj-c',\n    'objc',\n    'objectivec',\n    'ocaml',\n    'openscad',\n    'osascript',\n    'oxygene',\n    'p21',\n    'parser3',\n    'pas',\n    'pascal',\n    'patch',\n    'pb',\n    'pbi',\n    'pcmk',\n    'perl',\n    'pf.conf',\n    'pf',\n    'php',\n    'php3',\n    'php4',\n    'php5',\n    'php6',\n    'pl',\n    'plist',\n    'pm',\n    'podspec',\n    'pony',\n    'powershell',\n    'pp',\n    'processing',\n    'profile',\n    'prolog',\n    'protobuf',\n    'ps',\n    'puppet',\n    'purebasic',\n    'py',\n    'python',\n    'q',\n    'qml',\n    'qt',\n    'r',\n    'rb',\n    'rib',\n    'roboconf',\n    'rs',\n    'rsl',\n    'rss',\n    'ruby',\n    'ruleslanguage',\n    'rust',\n    'scad',\n    'scala',\n    'scheme',\n    'sci',\n    'scilab',\n    'scss',\n    'sh',\n    'shell',\n    'smali',\n    'smalltalk',\n    'sml',\n    'sqf',\n    'sql',\n    'st',\n    'stan',\n    'stata',\n    'step',\n    'step21',\n    'stp',\n    'styl',\n    'stylus',\n    'subunit',\n    'sv',\n    'svh',\n    'swift',\n    'taggerscript',\n    'tao',\n    'tap',\n    'tcl',\n    'tex',\n    'thor',\n    'thrift',\n    'tk',\n    'toml',\n    'tp',\n    'ts',\n    'twig',\n    'typescript',\n    'v',\n    'vala',\n    'vb',\n    'vbnet',\n    'vbs',\n    'vbscript-html',\n    'vbscript',\n    'verilog',\n    'vhdl',\n    'vim',\n    'wildfly-cli',\n    'x86asm',\n    'xhtml',\n    'xjb',\n    'xl',\n    'xls',\n    'xlsx',\n    'xml',\n    'xpath',\n    'xq',\n    'xquery',\n    'xsd',\n    'xsl',\n    'yaml',\n    'yml',\n    'zep',\n    'zephir',\n    'zone',\n    'zsh'\n  ]\n    .sort()\n    .sort((a, b) => b.length - a.length);\n\n  /**\n   * Get highlight.js language of given query.\n   */\n  static getLang (query?: string | null): string | undefined {\n    if (!query || typeof query !== 'string') return undefined\n    return this.languages.find((l) => query.endsWith(l))\n  }\n}\n","export class System {\n  /**\n   * Get memory info\n   *\n   * @returns {NodeJS.MemoryUsage}\n   */\n  static memory (): Partial<NodeJS.MemoryUsage> {\n    const memory = process.memoryUsage()\n    const keys = Object.keys(memory)\n\n    const a = memory\n\n    keys.forEach((key) => {\n      // @ts-ignore\n      memory[key] = (a[key] / 1024 / 1024).toFixed(2) + 'MB'\n    })\n\n    return memory\n  }\n\n  static processReadyAt () {\n    return new Date(Date.now() - process.uptime() * 1000)\n  }\n}\n","import type { TimestampStylesString } from 'discord.js'\n\nexport class DateFormatting {\n  static _format (date: Date | number, style: TimestampStylesString): string {\n    return (\n      `<t:${Math.floor(Number(date) / 1000)}` + (style ? `:${style}` : '') + '>'\n    )\n  }\n\n  static relative (date: Date | number): string {\n    return this._format(date, 'R')\n  }\n}\n","import { Collection } from 'discord.js'\nimport { typeFind } from './type'\n\nexport function count (argument: any): { name: string; count: number; ratio: string }[] | null {\n  if (\n    argument instanceof Map ||\n    argument instanceof Set ||\n    argument instanceof Collection\n  ) { argument = Array.from(argument.values()) }\n  if (Array.isArray(argument)) {\n    const typed = argument.map((el) =>\n      el?.constructor ? el.constructor.name : typeFind(el)\n    )\n    const obj: any = {}\n\n    for (const t of typed) {\n      if (!obj[t]) obj[t] = 0\n      obj[t]++\n    }\n\n    const items = Object.keys(obj).map((el) => {\n      return { name: el, count: obj[el] as number }\n    })\n    const total = items.reduce(\n      (previous, current) => previous + current.count,\n      0\n    )\n    return items\n      .map((el) => {\n        return {\n          name: el.name,\n          count: el.count,\n          ratio: ((el.count / total) * 100).toFixed(1)\n        }\n      })\n      .sort((a, b) => Number(b.ratio) - Number(a.ratio))\n  }\n  return null\n}\n","export function typeFind (argument: any): 'NaN' | 'Class' | 'Function' | string {\n  if (typeof argument === 'number' && isNaN(argument)) return 'NaN'\n  const parsed = Object.prototype.toString.apply(argument)\n  const obj = parsed.slice(1, 7)\n  if (obj !== 'object') return typeof argument\n  const type = parsed.slice(8, parsed.length - 1)\n  if (type === 'Function') { return /^class[\\s{]/.test(String(argument)) ? 'Class' : 'Function' } else return type\n}\n","import util from 'util'\n\nexport function inspect (value: unknown, options: util.InspectOptions): string {\n  return util.inspect(value, options)\n}\n","export function table (obj: Record<string, any>) {\n  clean(obj)\n  const max =\n    Object.keys(obj)\n      .map((e) => e.toString().length)\n      .sort((a, b) => b - a)[0]! + 4\n\n  return Object.keys(obj)\n    .map((key) => `${key}${' '.repeat(max - key.length)}:: ${obj[key]}`)\n    .join('\\n')\n}\n\nfunction clean (obj: Record<string, any>) {\n  for (const propName in obj) {\n    if (!obj[propName]) {\n      delete obj[propName]\n    }\n  }\n}\n","import { Collection } from 'discord.js'\n\nexport function isInstance (target: unknown, theClass: any): boolean {\n  if (\n    target instanceof Collection &&\n    target.map((f) => f instanceof theClass).includes(false)\n  ) { return false } else if (\n    Array.isArray(target) &&\n    target.map((f) => f instanceof theClass).includes(false)\n  ) { return false } else if (!(target instanceof theClass)) return false\n  else return true\n}\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isGenerator = (target: Generator): boolean =>\n  target &&\n  typeof target.next === 'function' &&\n  typeof target.throw === 'function'\n","export function regexpEscape (string: string) {\n  const str = String(string)\n  const cpList = Array.from(str[Symbol.iterator]())\n  const cuList = []\n  for (const c of cpList) {\n    if ('^$\\\\.*+?()[]{}|'.indexOf(c) !== -1) {\n      cuList.push('\\\\')\n    }\n    cuList.push(c)\n  }\n  const L = cuList.join('')\n  return L\n}\n","export function join (arr: string[], sep: string, lastSep: string): string {\n  if (arr.length <= 1) return arr.join(sep)\n  return arr.reduce((text, cur, idx) =>\n    [text, cur].join(idx === arr.length - 1 ? lastSep : sep)\n  )\n}\n","export * from './main'\nexport * from './exec'\nexport * from './js'\nexport * from './shard'\nexport * from './jsi'\nexport * from './curl'\nexport * from './cat'\n","import {\n  GatewayIntentBits,\n  IntentsBitField,\n  version as djsVersion\n} from 'discord.js'\nimport type { Client, Context } from '../'\n\nimport { System, DateFormatting, join } from '../utils'\nimport { version } from '../../package.json'\n\nexport async function main (message: Context, parent: Client): Promise<void> {\n  const intents = new IntentsBitField(parent.client.options.intents)\n\n  let summary = `Dokdo v${version}, discord.js \\`${djsVersion}\\`, \\`Node.js ${\n    process.version\n  }\\` on \\`${process.platform}\\`\\nProcess started at ${DateFormatting.relative(\n    System.processReadyAt()\n  )}, bot was ready at ${DateFormatting.relative(parent.client.readyAt ?? 0)}.\\n`\n\n  summary += `\\nUsing ${System.memory().rss} at this process.\\n`\n  const cache = `${parent.client.guilds.cache.size} guild(s) and ${parent.client.users.cache.size} user(s)`\n\n  if (parent.client.shard) {\n    const guilds = await parent.client.shard\n      .fetchClientValues('guilds.cache.size')\n      .then((r) => {\n        const out = r as number[]\n        out.reduce((prev, val) => prev + val, 0)\n      })\n    summary += `Running on PID ${process.pid} for this client, and running on PID ${process.ppid} for the parent process.\\n\\nThis bot is sharded in ${parent.client.shard.count} shard(s) and running in ${guilds} guild(s).\\nCan see ${cache} in this client.`\n  } else { summary += `Running on PID ${process.pid}\\n\\nThis bot is not sharded and can see ${cache}.` }\n\n  summary +=\n    '\\n' +\n    join(\n      [\n        GatewayIntentBits.GuildPresences,\n        GatewayIntentBits.GuildMembers,\n        GatewayIntentBits.MessageContent\n      ].map(\n        (u) =>\n          `\\`${GatewayIntentBits[u]}\\` intent is ${\n            intents.has(u) ? 'enabled' : 'disabled'\n          }`\n      ),\n      ', ',\n      ' and '\n    ) +\n    '.'\n  summary += `\\nAverage websocket latency: ${parent.client.ws.ping}ms`\n\n  message.reply(summary)\n}\n","{\n  \"name\": \"dokdo\",\n  \"version\": \"1.0.1\",\n  \"description\": \"Dokdo. Easy Discord bot debuging tool.\",\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"yarn test:bot\",\n    \"lint\": \"eslint --ext js,jsx,ts,tsx src\",\n    \"lint:fix\": \"eslint --ext js,jsx,ts,tsx src --fix\",\n    \"test\": \"yarn build && mocha --exit\",\n    \"test:bot\": \"yarn build && node examples/bot\",\n    \"test:shard\": \"yarn build && node examples/shard\",\n    \"update\": \"yarn upgrade-interactive\"\n  },\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/esm/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"exports\": {\n    \"import\": \"./dist/esm/index.js\",\n    \"require\": \"./dist/index.js\",\n    \"types\": \"./dist/index.d.ts\"\n  },\n  \"files\": [\n    \"src/**/*\",\n    \"dist/**/*\",\n    \"examples/**/*\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wonderlandpark/dokdo.git\"\n  },\n  \"author\": {\n    \"name\": \"wonderlandpark\",\n    \"email\": \"wonderlandpark@outlook.kr\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wonderlandpark/dokdo/issues\"\n  },\n  \"homepage\": \"https://github.com/wonderlandpark/dokdo#readme\",\n  \"dependencies\": {\n    \"node-fetch\": \"^2.6.7\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^16.3.1\",\n    \"@types/node-fetch\": \"^2.6.2\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.41.0\",\n    \"@typescript-eslint/parser\": \"^5.41.0\",\n    \"eslint\": \"^7.15.0\",\n    \"eslint-config-standard\": \"^16.0.2\",\n    \"eslint-plugin-import\": \"^2.22.1\",\n    \"eslint-plugin-jsdoc\": \"^36.0.6\",\n    \"eslint-plugin-markdown\": \"^2.0.0\",\n    \"eslint-plugin-mocha\": \"^9.0.0\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-promise\": \"^5.1.0\",\n    \"mocha\": \"^9.0.1\",\n    \"tsup\": \"^6.3.0\",\n    \"typescript\": \"^4.1.2\"\n  },\n  \"engines\": {\n    \"node\": \">=16.9.0\"\n  },\n  \"packageManager\": \"yarn@3.2.4\",\n  \"peerDependencies\": {\n    \"discord.js\": \"14\"\n  }\n}\n","import child from 'child_process'\nimport { ButtonBuilder, ButtonStyle, Message } from 'discord.js'\nimport type { Client } from '../'\nimport { ProcessManager, codeBlock } from '../utils'\n\nexport async function exec (message: Message, parent: Client): Promise<void> {\n  if (!message.data.args) {\n    message.reply('Missing Arguments.')\n    return\n  }\n\n  const shell =\n    process.env.SHELL || (process.platform === 'win32' ? 'powershell' : null)\n  if (!shell) {\n    message.reply(\n      'Sorry, we are not able to find your default shell.\\nPlease set `process.env.SHELL`.'\n    )\n    return\n  }\n\n  const msg = new ProcessManager(message, `$ ${message.data.args}\\n`, parent, {\n    lang: 'bash'\n  })\n  await msg.init()\n\n  const res = child.spawn(shell, [\n    '-c',\n    (shell === 'win32' ? 'chcp 65001\\n' : '') + message.data.args\n  ])\n  const timeout = setTimeout(() => {\n    kill(res, 'SIGTERM')\n    message.reply('Shell timeout occured.')\n  }, 180000)\n\n  await msg.addAction(\n    [\n      {\n        button: new ButtonBuilder()\n          .setStyle(ButtonStyle.Danger)\n          .setCustomId('dokdo$prev')\n          .setLabel('Prev'),\n        action: ({ manager }) => manager.previousPage(),\n        requirePage: true\n      },\n      {\n        button: new ButtonBuilder()\n          .setStyle(ButtonStyle.Secondary)\n          .setCustomId('dokdo$stop')\n          .setLabel('Stop'),\n        action: async ({ res, manager }) => {\n          res.stdin.pause()\n          kill(res)\n          msg.add('^C')\n          manager.destroy()\n        },\n        requirePage: false\n      },\n      {\n        button: new ButtonBuilder()\n          .setStyle(ButtonStyle.Success)\n          .setCustomId('dokdo$next')\n          .setLabel('Next'),\n        action: ({ manager }) => manager.nextPage(),\n        requirePage: true\n      }\n    ],\n    { res }\n  )\n\n  res.stdout.on('data', (data) => {\n    msg.add(data.toString())\n  })\n\n  res.stderr.on('data', (data) => {\n    msg.add(`[stderr] ${data.toString()}`)\n  })\n\n  res.on('error', (err) => {\n    return message.reply(\n      `Error occurred while spawning process\\n${codeBlock.construct(\n        err.toString(),\n        'sh'\n      )}`\n    )\n  })\n  res.on('close', (code) => {\n    clearTimeout(timeout)\n    msg.add(`\\n[status] process exited with code ${code}`)\n  })\n}\n\nfunction kill (res: child.ChildProcessWithoutNullStreams, signal?: NodeJS.Signals) {\n  if (process.platform === 'win32') {\n    return child.exec(\n      `powershell -File \"..\\\\utils\\\\KillChildrenProcess.ps1\" ${res.pid}`,\n      { cwd: __dirname }\n    )\n  } else return res.kill('SIGINT' || signal)\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Discord, { Embed, EmbedBuilder, Collection, Attachment, ButtonBuilder, ButtonStyle, Message } from 'discord.js'\nimport type { Client, Context } from '../'\nimport { ProcessManager, inspect, isInstance, isGenerator } from '../utils'\n\nexport async function js (message: Context, parent: Client): Promise<void> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { client } = parent // for eval\n  const isMessage = message instanceof Message\n  if (isMessage && !message.data.args) {\n    message.reply('Missing Arguments.')\n    return\n  }\n\n  const res = new Promise((resolve) =>\n    resolve(\n      // eslint-disable-next-line no-eval\n      eval(\n        isMessage\n          ? message.data.args ?? ''\n          : message.options.getString('content', true)\n      )\n    )\n  )\n  let typeOf\n  const result = await res\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .then(async (output: any) => {\n      typeOf = typeof output\n\n      async function prettify (target: unknown): Promise<void> {\n        if (\n          target instanceof Embed ||\n          target instanceof EmbedBuilder\n        ) { await message.reply({ embeds: [target] }) } else if (isInstance(target, Attachment)) {\n          await message.reply({\n            files:\n              target instanceof Collection ? target.toJSON() : [target]\n          })\n        }\n      }\n\n      if (isGenerator(output)) {\n        for (const value of output) {\n          prettify(value)\n\n          if (typeof value === 'function') { await message.reply(value.toString()) } else if (typeof value === 'string') await message.reply(value)\n          else {\n            await message.reply(\n              inspect(value, { depth: 1, maxArrayLength: 200 })\n            )\n          }\n        }\n      }\n\n      prettify(output)\n\n      if (typeof output === 'function') {\n        typeOf = 'object'\n        return output.toString()\n      } else if (typeof output === 'string') {\n        return output\n      }\n      return inspect(output, { depth: 1, maxArrayLength: 200 })\n    })\n    .catch((e) => {\n      typeOf = 'object'\n      return e.toString()\n    })\n\n  const msg = new ProcessManager(message, result || '', parent, {\n    lang: 'js',\n    noCode: typeOf !== 'object'\n  })\n  await msg.init()\n  await msg.addAction([\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Danger)\n        .setCustomId('dokdo$prev')\n        .setLabel('Prev'),\n      action: ({ manager }) => manager.previousPage(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Secondary)\n        .setCustomId('dokdo$stop')\n        .setLabel('Stop'),\n      action: ({ manager }) => manager.destroy(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Success)\n        .setCustomId('dokdo$next')\n        .setLabel('Next'),\n      action: ({ manager }) => manager.nextPage(),\n      requirePage: true\n    }\n  ])\n}\n","import { Client as DiscordClient, ButtonBuilder, ButtonStyle, Message } from 'discord.js'\nimport type { Client } from '../'\nimport { ProcessManager, inspect } from '../utils'\n\nexport async function shard (message: Message, parent: Client): Promise<void> {\n  if (!message.data.args) {\n    message.reply('Missing Arguments.')\n    return\n  }\n  if (!parent.client.shard) {\n    message.reply('Shard Manager not found.')\n    return\n  }\n  let evalFunction: (client: DiscordClient) => unknown\n  try {\n    // eslint-disable-next-line no-new-func\n    evalFunction = Function('client', `return ${message.data.args}`) as (\n      client: DiscordClient\n    ) => unknown // catch syntax error\n  } catch (err) {\n    message.reply(err?.toString() ?? 'Error Occurred.')\n    return\n  }\n  const result = await parent.client.shard\n    .broadcastEval(evalFunction)\n    .then(el => el)\n    .catch(e => e.toString())\n  let msg\n  if (!Array.isArray(result)) { msg = new ProcessManager(message, result, parent, { lang: 'js' }) } else {\n    let sum\n    if (typeof result[0] === 'number') { sum = result.reduce((prev, val) => prev + val, 0) } else if (Array.isArray(result[0])) { sum = result.reduce((prev, val) => prev.concat(val), []) }\n    msg = new ProcessManager(\n      message,\n      `// TOTAL\\n${inspect(sum, { depth: 1, maxArrayLength: 50 })}\\n\\n${result\n        .map(\n          (value, index) =>\n            `// #${index} SHARD\\n${inspect(value, {\n              depth: 1,\n              maxArrayLength: 100\n            })}`\n        )\n        .join('\\n')}`,\n      parent,\n      { lang: 'js' }\n    )\n  }\n\n  await msg.init()\n  await msg.addAction([\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Primary)\n        .setCustomId('dokdo$prev')\n        .setLabel('Prev'),\n      action: ({ manager }) => manager.previousPage(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Secondary)\n        .setCustomId('dokdo$stop')\n        .setLabel('Stop'),\n      action: ({ manager }) => manager.destroy(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Success)\n        .setCustomId('dokdo$next')\n        .setLabel('Next'),\n      action: ({ manager }) => manager.nextPage(),\n      requirePage: true\n    }\n  ])\n}\n","import { Collection, ButtonBuilder, ButtonStyle, Message } from 'discord.js'\nimport type { Client } from '../'\nimport { ProcessManager, count, inspect, table, typeFind } from '../utils'\n\nexport async function jsi (message: Message, parent: Client): Promise<void> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { client } = parent\n  if (!message.data.args) {\n    message.reply('Missing Arguments.')\n    return\n  }\n\n  // eslint-disable-next-line no-eval\n  const res = new Promise((resolve) => resolve(eval(message.data.args ?? '')))\n  let msg!: ProcessManager\n  await res\n    .then((output) => {\n      const typeofTheRes = typeFind(output)\n      const overview = inspect(output, { depth: -1 })\n      const constructorName =\n        output && output.constructor\n          ? Object.getPrototypeOf(output.constructor).name\n          : null\n      const arrCount = count(output)\n      msg = new ProcessManager(\n        message,\n        `=== ${overview.slice(0, 100)}${\n          overview.length > 100 ? '...' : ''\n        } ===\\n\\n${table({\n          Type: `${typeof output}(${typeofTheRes})`,\n          Name: constructorName || null,\n          Length: typeof output === 'string' && output.length,\n          Size: output instanceof Collection ? output.size : null,\n          'Content Types': arrCount\n            ? arrCount.map((el) => `${el.name} (${el.ratio}％)`).join(', ')\n            : null\n        })}`,\n        parent,\n        { lang: 'prolog' }\n      )\n    })\n    .catch((e) => {\n      msg = new ProcessManager(message, e.stack, parent, { lang: 'js' })\n    })\n\n  await msg.init()\n  await msg.addAction([\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Danger)\n        .setCustomId('dokdo$prev')\n        .setLabel('Prev'),\n      action: ({ manager }) => manager.previousPage(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Secondary)\n        .setCustomId('dokdo$stop')\n        .setLabel('Stop'),\n      action: ({ manager }) => manager.destroy(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Success)\n        .setCustomId('dokdo$next')\n        .setLabel('Next'),\n      action: ({ manager }) => manager.nextPage(),\n      requirePage: true\n    }\n  ])\n}\n","import fetch from 'node-fetch'\nimport { ButtonBuilder, ButtonStyle, Message } from 'discord.js'\nimport { ProcessManager, HLJS } from '../utils'\nimport type { Client } from '../'\n\nexport async function curl (message: Message, parent: Client): Promise<void> {\n  if (!message.data.args) {\n    message.reply('Missing Arguments.')\n    return\n  }\n\n  let type\n  const res = await fetch(message.data.args.split(' ')[0] as string)\n    .then(async r => {\n      const text = await r.text()\n      try {\n        type = 'json'\n        return JSON.stringify(JSON.parse(text), null, 2)\n      } catch {\n        type = HLJS.getLang(r.headers.get('Content-Type')) || 'html'\n        return text\n      }\n    })\n    .catch((e) => {\n      type = 'js'\n      message.react('❗')\n      console.log(e.stack)\n      return e.toString()\n    })\n\n  // console.log(res)\n  const msg = new ProcessManager(message, res || '', parent, { lang: type })\n  await msg.init()\n  await msg.addAction([\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Danger)\n        .setCustomId('dokdo$prev')\n        .setLabel('Prev'),\n      action: ({ manager }) => manager.previousPage(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Secondary)\n        .setCustomId('dokdo$stop')\n        .setLabel('Stop'),\n      action: ({ manager }) => manager.destroy(),\n      requirePage: true\n    },\n    {\n      button: new ButtonBuilder()\n        .setStyle(ButtonStyle.Success)\n        .setCustomId('dokdo$next')\n        .setLabel('Next'),\n      action: ({ manager }) => manager.nextPage(),\n      requirePage: true\n    }\n  ])\n}\n","import fs from 'fs'\nimport { ButtonBuilder, ButtonStyle, Message } from 'discord.js'\nimport { ProcessManager, HLJS } from '../utils'\nimport type { Client } from '../'\n\nexport async function cat (message: Message, parent: Client): Promise<void> {\n  if (!message.data.args) {\n    message.reply('Missing Arguments.')\n    return\n  }\n  const filename = message.data.args\n  let msg\n  fs.readFile(filename, async (err, data) => {\n    if (err) { msg = new ProcessManager(message, err.toString(), parent, { lang: 'js' }) } else {\n      msg = new ProcessManager(message, data.toString(), parent, {\n        lang: HLJS.getLang(filename.split('.').pop())\n      })\n    }\n    await msg.init()\n    await msg.addAction([\n      {\n        button: new ButtonBuilder()\n          .setStyle(ButtonStyle.Danger)\n          .setCustomId('dokdo$prev')\n          .setLabel('Prev'),\n        action: ({ manager }) => manager.previousPage(),\n        requirePage: true\n      },\n      {\n        button: new ButtonBuilder()\n          .setStyle(ButtonStyle.Secondary)\n          .setCustomId('dokdo$stop')\n          .setLabel('Stop'),\n        action: ({ manager }) => manager.destroy(),\n        requirePage: true\n      },\n      {\n        button: new ButtonBuilder()\n          .setStyle(ButtonStyle.Primary)\n          .setCustomId('dokdo$next')\n          .setLabel('Next'),\n        action: ({ manager }) => manager.nextPage(),\n        requirePage: true\n      }\n    ])\n  })\n}\n"],"mappings":"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","names":["Message","User","fetch","message","msg","result","Collection","Collection","message","parent","ButtonBuilder","message","parent","msg","res","ButtonBuilder","Collection","ButtonBuilder","ButtonStyle","Message","Message","Collection","ButtonBuilder","ButtonStyle","ButtonBuilder","ButtonStyle","message","parent","result","msg","ButtonBuilder","ButtonStyle","Collection","ButtonBuilder","ButtonStyle","Collection","ButtonBuilder","ButtonStyle","ButtonBuilder","ButtonStyle","message","parent","res","msg","ButtonBuilder","ButtonStyle","ButtonBuilder","ButtonStyle","message","parent","msg","ButtonBuilder","ButtonStyle","client","User","Message","fetch"]}